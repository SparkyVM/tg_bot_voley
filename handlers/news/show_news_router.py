from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, CallbackQuery
from create_bot import bot
from data_base.dao import get_news, get_post
from keyboards.reply_menu_kb import main_kb, news1_kb
from keyboards.gen_other_kb import generate_news_kb
from utils.utils import send_post

show_news_router = Router()


class FindNoteStates(StatesGroup):
    text = State()  # –û–∂–∏–¥–∞–µ–º –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


@show_news_router.message(F.text == '/–Ω–æ–≤–æ—Å—Ç–∏')
async def show_all_news(message: Message, state: FSMContext):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ù–æ–≤–æ—Å—Ç–µ–π"""
    await state.clear()
    all_news = await get_news()
    if all_news:
        await message.answer('–ù–æ–≤–æ—Å—Ç–∏:', reply_markup=generate_news_kb(all_news))
    else:
        await message.answer('–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è!', reply_markup=main_kb())


@show_news_router.callback_query(F.data.startswith('select_post_'))
async def show_select_post(call: CallbackQuery, state: FSMContext):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –°—Ç–∞—Ç—å–∏"""
    await call.answer()
    await state.clear()
    sel_title = call.data.replace('select_post_', '')
    sel_post = await get_post(post_title=sel_title)
    if sel_post:
        await send_post(bot, user_id=call.from_user.id, all_news=sel_post)

'''
@show_news_router.message(F.text == 'üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–π')
async def start_views_noti(message: Message, state: FSMContext):
    await state.clear()
    await message.answer('–í—ã–±–µ—Ä–∏ –∫–∞–∫–∏–µ –∑–∞–º–µ—Ç–∫–∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å', reply_markup=find_note_kb())

'''
